spring:
  application:
    name: plantation-service
  data:
    mongodb:
      uri: mongodb://root:root@${MONGODB_ADDRESS:localhost:30001}/tea-plantation?authSource=admin
      database: tea-plantation
      uuid-representation: standard
      replica-set-name: rs0
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:31691}
    username: rabbitmq
    password: rab!@#
eureka:
  instance:
    prefer-ip-address: true # for k8s correct work
  client:
    serviceUrl:
      defaultZone: http://${EUREKA_HOST:localhost}:${EUREKA_PORT:8761}/eureka/
management:
  tracing:
    enabled: ${TRACING_ENABLED:false}
    sampling:
      probability: 1.0

mongock:
  mongo-db:
    read-concern: local
  transactionEnabled: true
  migration-scan-package: com.tea.plantation.migration

tea:
  plantation:
    synchronize-initial-delay: ${SYNC_INITIAL_DELAY:PT1M}
    synchronize-with-inventory-duration: ${SYNC_DURATION:PT5M}
  inventory:
    name: 'inventory-service'
    host: 'http://localhost:8082'
    endpoint: '/v1/inventory/tea/{teaId}'

logging:
  level:
    root: info
    com:
      mongodb: info
      tea:
        plantation: debug
    org:
      springframework:
        data:
          mongodb: info
      apache:
        hc:
          client5:
            http: info
    io:
      mongock: info