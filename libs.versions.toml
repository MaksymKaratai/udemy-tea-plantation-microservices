[versions]
mapstruct-version = '1.5.3.Final'
eureka-version = '4.0.1'

[libraries]
lombok = { module = 'org.projectlombok:lombok' }
flyway = { module = 'org.flywaydb:flyway-core' }
postgresql = { module = 'org.postgresql:postgresql' }
datafaker = { module = 'net.datafaker:datafaker', version = '1.8.0' }
awaitility = { module = 'org.awaitility:awaitility', version = '4.2.0' }
commons-lang3 = { module = 'org.apache.commons:commons-lang3' }
commons-collections4 = { module = 'org.apache.commons:commons-collections4', version = '4.4' }
mapstruct = { module = 'org.mapstruct:mapstruct', version.ref = 'mapstruct-version' }
mapstruct-processor = { module = 'org.mapstruct:mapstruct-processor', version.ref = 'mapstruct-version' }
httpclient5 = { module = 'org.apache.httpcomponents.client5:httpclient5', version = '5.2.1' }

devtools = { module = 'org.springframework.boot:spring-boot-devtools' }
spring-amqp = { module = 'org.springframework.amqp:spring-amqp' }
spring-data-commons = { module = 'org.springframework.data:spring-data-commons' }
spring-statemachine-core = { module = 'org.springframework.statemachine:spring-statemachine-core', version = '3.2.0' }
spring-boot-starter-web = { module = 'org.springframework.boot:spring-boot-starter-web' }
spring-boot-starter-test = { module = 'org.springframework.boot:spring-boot-starter-test' }
spring-boot-starter-amqp = { module = 'org.springframework.boot:spring-boot-starter-amqp' }
spring-boot-starter-data-jpa = { module = 'org.springframework.boot:spring-boot-starter-data-jpa' }
spring-boot-starter-validation = { module = 'org.springframework.boot:spring-boot-starter-validation' }
spring-boot-starter-data-mongodb = { module = 'org.springframework.boot:spring-boot-starter-data-mongodb' }
spring-boot-starter-cloud-gateway = { module = 'org.springframework.cloud:spring-cloud-starter-gateway', version = '4.0.4' }
spring-boot-starter-cloud-eureka-server = { module = 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server', version.ref = 'eureka-version' }
spring-boot-starter-cloud-eureka-client = { module = 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client', version.ref = 'eureka-version' }

mongock-bom = { module = 'io.mongock:mongock-bom', version = '5.2.2' }
mongock-springboot = { module = 'io.mongock:mongock-springboot-v3' }
mongock-driver = { module = 'io.mongock:mongodb-springdata-v4-driver' }

testcontainers-jupiter = { module = "org.testcontainers:junit-jupiter", version = '1.18.0' }
testcontainers-postgres = { module = "org.testcontainers:postgresql", version = '1.18.0' }
testcontainers-rabbitmq = { module = "org.testcontainers:rabbitmq", version = '1.17.6' }

[plugins]
spring-boot = { id = 'org.springframework.boot', version = '3.0.2' }
spring-dependency-management = { id = 'io.spring.dependency-management', version = '1.1.0' }